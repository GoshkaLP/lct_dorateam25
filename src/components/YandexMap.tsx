import React, { useEffect, useRef, useState, useMemo } from 'react'
import { observer } from 'mobx-react-lite'
import { mapStore } from '../stores'
import { MAPS_CONFIG } from '../config/maps'
import { useYandexMaps, useMarkerModal } from '../hooks'
import { KremlinModal, MarkerModal } from './'

const YandexMap: React.FC = observer(() => {
  const mapRef = useRef<HTMLDivElement>(null)
  const mapInstanceRef = useRef<any>(null)
  const [isApiReady, setIsApiReady] = useState(false)
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ö—É–∫ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ API
  const { isLoaded: isApiLoaded, isLoading: isApiLoading, error: apiError } = useYandexMaps()
  
  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ö—É–∫ –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –º–∞—Ä–∫–µ—Ä–∞ –ö—Ä–µ–º–ª—è
  const { 
    isVisible: isModalVisible, 
    position: markerPosition, 
    openModal, 
    closeModal, 
    handleMarkerClick 
  } = useMarkerModal({
    mapInstance: mapInstanceRef.current,
    coordinates: MAPS_CONFIG.MOSCOW_CENTER,
    autoOpenOnClick: true
  })

  // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ (–º–µ–º–æ–∏–∑–∏—Ä—É–µ–º, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ø–µ—Ä–µ—Å–æ–∑–¥–∞–Ω–∏—è)
  const customObjectCoords = useMemo((): [number, number] => [
    MAPS_CONFIG.MOSCOW_CENTER[0] + 0.1,
    MAPS_CONFIG.MOSCOW_CENTER[1] + 0.2
  ], [])
  
  const { 
    isVisible: isCustomModalVisible, 
    position: customMarkerPosition, 
    closeModal: closeCustomModal, 
    handleMarkerClick: handleCustomMarkerClick 
  } = useMarkerModal({
    mapInstance: mapInstanceRef.current,
    coordinates: customObjectCoords,
    autoOpenOnClick: true
  })


  // –í—ã–Ω–æ—Å–∏–º —Ñ—É–Ω–∫—Ü–∏—é –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  const initializeMap = async () => {
      try {
        // –ñ–¥–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ API
        await window.ymaps3.ready
        setIsApiReady(true)

        // –ñ–¥–µ–º –Ω–µ–±–æ–ª—å—à–æ–π —Ç–∞–π–º–∞—É—Ç —á—Ç–æ–±—ã DOM —É—Å–ø–µ–ª –æ—Ç—Ä–µ–Ω–¥–µ—Ä–∏—Ç—å—Å—è
        await new Promise(resolve => setTimeout(resolve, 100))

        // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —á–µ—Ä–µ–∑ ref –∏–ª–∏ –ø–æ ID
        let mapContainer = mapRef.current
        
        if (!mapContainer) {
          mapContainer = document.getElementById('yandex-map-container') as HTMLDivElement
        }

        if (!mapContainer) {
          mapStore.setError('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.')
          mapStore.setMapLoading(false)
          return
        }
        
        // –û–±–Ω–æ–≤–ª—è–µ–º ref –µ—Å–ª–∏ –æ–Ω –±—ã–ª null (—á–µ—Ä–µ–∑ Object.assign –¥–ª—è –æ–±—Ö–æ–¥–∞ readonly)
        if (!mapRef.current && mapContainer) {
          Object.assign(mapRef, { current: mapContainer })
        }

        // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏ —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        const ymaps3 = window.ymaps3
        
        // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π —Å–æ–≥–ª–∞—Å–Ω–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
        await ymaps3.ready;
        
        const { YMap, YMapDefaultSchemeLayer, YMapDefaultFeaturesLayer } = ymaps3;
        
        const { YMapControls, YMapControlButton } = await ymaps3.import(['@yandex/ymaps3-controls@0.0.1']);
        const { YMapDefaultMarker } = await ymaps3.import(['@yandex/ymaps3-markers@0.0.1']);

        // –°–æ–∑–¥–∞–µ–º –∫–∞—Ä—Ç—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
        const map = new YMap(mapContainer, {
          location: {
            center: MAPS_CONFIG.MOSCOW_CENTER,
            zoom: MAPS_CONFIG.DEFAULT_ZOOM
          },
          mode: 'vector'
        })

        // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ö–µ–º—É –∫–∞—Ä—Ç—ã
        map.addChild(new YMapDefaultSchemeLayer({}))
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ª–æ–π –æ–±—ä–µ–∫—Ç–æ–≤
        map.addChild(new YMapDefaultFeaturesLayer({}))

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç—Ä–æ–ª—ã
        const controls = new YMapControls({ 
          position: 'top left',
          orientation: 'vertical'
        })
        
        const centerButton = new YMapControlButton({
          text: 'üè† –¶–µ–Ω—Ç—Ä –ú–æ—Å–∫–≤—ã',
          onClick: () => {
            map.setLocation({
              center: MAPS_CONFIG.MOSCOW_CENTER,
              zoom: MAPS_CONFIG.DEFAULT_ZOOM
            })
            mapStore.centerOnMoscow()
          }
        })
        
        const infoButton = new YMapControlButton({
          text: 'üè∞ –û –ö—Ä–µ–º–ª–µ',
          onClick: openModal
        })
        
        controls.addChild(centerButton)
        controls.addChild(infoButton)
        map.addChild(controls)

        // –î–æ–±–∞–≤–ª—è–µ–º –º–∞—Ä–∫–µ—Ä –≤ —Ü–µ–Ω—Ç—Ä–µ –ú–æ—Å–∫–≤—ã
        const marker = new YMapDefaultMarker({
          coordinates: MAPS_CONFIG.MOSCOW_CENTER,
          draggable: false,
          title: '–¶–µ–Ω—Ç—Ä –ú–æ—Å–∫–≤—ã?',
          subtitle: '–ö—Ä–∞—Å–Ω–∞—è –ø–ª–æ—â–∞–¥—å'
        })
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        try {
          marker.addEventListener('click', handleMarkerClick)
        } catch (error) {
          // –ï—Å–ª–∏ addEventListener –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ–ø—Ä–æ–±—É–µ–º –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±
          if (marker.on) {
            marker.on('click', handleMarkerClick)
          }
        }
        
        map.addChild(marker)

        // –î–æ–±–∞–≤–ª—è–µ–º –≤–∞—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–±—ä–µ–∫—Ç —Ä—è–¥–æ–º —Å –æ—Å–Ω–æ–≤–Ω—ã–º –º–∞—Ä–∫–µ—Ä–æ–º
        const customObjectCoords: [number, number] = [
          MAPS_CONFIG.MOSCOW_CENTER[0] + 0.002, // –ù–µ–º–Ω–æ–≥–æ —Å–¥–≤–∏–≥–∞–µ–º –ø–æ –¥–æ–ª–≥–æ—Ç–µ
          MAPS_CONFIG.MOSCOW_CENTER[1] + 0.001  // –ù–µ–º–Ω–æ–≥–æ —Å–¥–≤–∏–≥–∞–µ–º –ø–æ —à–∏—Ä–æ—Ç–µ
        ]

        const customMarker = new YMapDefaultMarker({
          coordinates: customObjectCoords,
          draggable: true, // –î–µ–ª–∞–µ–º –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–µ–º—ã–º
          title: 'üè¢ –ú–æ–π –æ–±—ä–µ–∫—Ç',
          subtitle: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Ç–æ—á–∫–∞'
        })

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –º–∞—Ä–∫–µ—Ä–∞
        try {
          customMarker.addEventListener('click', handleCustomMarkerClick)
        } catch (error) {
          if (customMarker.on) {
            customMarker.on('click', handleCustomMarkerClick)
          }
        }

        map.addChild(customMarker)
        
        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –∫–∞—Ä—Ç—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
        try {
          const updateModalPosition = () => {
            // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–∞—Ä—Ç—ã
            // –¢—Ä–∏–≥–≥–µ—Ä–∏–º –ø–µ—Ä–µ—Ä–µ–Ω–¥–µ—Ä —Ö—É–∫–∞ useMarkerPosition
            const event = new CustomEvent('mapChanged')
            window.dispatchEvent(event)
          }

          // –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –∫–∞—Ä—Ç—ã (API –º–æ–∂–µ—Ç –æ—Ç–ª–∏—á–∞—Ç—å—Å—è –≤ —Ä–∞–∑–Ω—ã—Ö –≤–µ—Ä—Å–∏—è—Ö)
          if (map && typeof (map as any).addEventListener === 'function') {
            (map as any).addEventListener('update', updateModalPosition)
          } else if (map && typeof (map as any).on === 'function') {
            (map as any).on('update', updateModalPosition)
          }
          
          // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
          const positionUpdateInterval = setInterval(updateModalPosition, 500)
          
          // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
          mapInstanceRef.current._positionUpdateInterval = positionUpdateInterval
          
        } catch (error) {
          console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –∫–∞—Ä—Ç—ã:', error)
        }

        mapInstanceRef.current = map
        mapStore.setMapLoaded(true)
        mapStore.setMapLoading(false)
        mapStore.setError(null)

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∫–∞—Ä—Ç–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –æ—Ç—Ä–µ–Ω–¥–µ—Ä–∏–ª–∞—Å—å
        setTimeout(() => {
          const container = mapContainer || document.getElementById('yandex-map-container')
          
          // –ï—Å–ª–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø—É—Å—Ç–æ–π, –ø–æ–ø—Ä–æ–±—É–µ–º –µ—â–µ —Ä–∞–∑
          if (container && container.children.length === 0) {
            setTimeout(() => {
              handleRetry()
            }, 1000)
          }
        }, 1000)

      } catch (error) {
        mapStore.setError(`–û—à–∏–±–∫–∞ ymaps3: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
        mapStore.setMapLoading(false)
        
        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
        setTimeout(() => {
          handleRetry()
        }, 2000)
      }
    }

  useEffect(() => {
    // –ï—Å–ª–∏ API –µ—â–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∂–¥–µ–º
    if (!isApiLoaded) {
      return
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ DOM
    if (document.readyState === 'loading') {
      const handleDOMReady = () => {
        document.removeEventListener('DOMContentLoaded', handleDOMReady)
        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –∏ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
        setTimeout(() => {
          if (isApiLoaded) {
            mapStore.setMapLoading(true)
            initializeMap()
          }
        }, 50)
      }
      document.addEventListener('DOMContentLoaded', handleDOMReady)
      return
    }

    mapStore.setMapLoading(true)
    initializeMap()

    // Cleanup –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      if (mapInstanceRef.current) {
        // –û—á–∏—â–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–∑–∏—Ü–∏–∏
        if (mapInstanceRef.current._positionUpdateInterval) {
          clearInterval(mapInstanceRef.current._positionUpdateInterval)
        }
        mapInstanceRef.current.destroy()
        mapInstanceRef.current = null
      }
    }
  }, [isApiLoaded])


  const handleRetry = async () => {
    mapStore.setError(null)
    mapStore.setMapLoading(true)
    
    try {
      // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫–∑–µ–º–ø–ª—è—Ä –∫–∞—Ä—Ç—ã –µ—Å–ª–∏ –µ—Å—Ç—å
      if (mapInstanceRef.current) {
        try {
          mapInstanceRef.current.destroy()
        } catch (e) {
          // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏
        }
        mapInstanceRef.current = null
      }

      // –ü—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞—Ä—Ç—É
      if (!window.ymaps3) {
        throw new Error('Yandex Maps API –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω')
      }

      await window.ymaps3.ready

      // –ñ–¥–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
      await new Promise(resolve => setTimeout(resolve, 200))

      let mapContainer = mapRef.current || (document.getElementById('yandex-map-container') as HTMLDivElement)
      
      if (!mapContainer) {
        throw new Error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∫–∞—Ä—Ç—ã –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω')
      }

      // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
      mapContainer.innerHTML = ''

      const ymaps3 = window.ymaps3
      
      const { YMap, YMapDefaultSchemeLayer, YMapDefaultFeaturesLayer } = ymaps3;
      const { YMapDefaultMarker } = await ymaps3.import(['@yandex/ymaps3-markers@0.0.1']);

      const map = new YMap(mapContainer, {
        location: {
          center: MAPS_CONFIG.MOSCOW_CENTER,
          zoom: MAPS_CONFIG.DEFAULT_ZOOM
        },
        mode: 'vector'
      })

      map.addChild(new YMapDefaultSchemeLayer({}))
      map.addChild(new YMapDefaultFeaturesLayer({}))

      const marker = new YMapDefaultMarker({
        coordinates: MAPS_CONFIG.MOSCOW_CENTER,
        draggable: false,
        title: '–¶–µ–Ω—Ç—Ä –ú–æ—Å–∫–≤—ã!'
      })
      map.addChild(marker)

      // –î–æ–±–∞–≤–ª—è–µ–º –≤–∞—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–±—ä–µ–∫—Ç –∏ –≤ —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–≤—Ç–æ—Ä–∞
      const customMarkerRetry = new YMapDefaultMarker({
        coordinates: customObjectCoords,
        draggable: true,
        title: 'üè¢ –ú–æ–π –æ–±—ä–µ–∫—Ç',
        subtitle: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Ç–æ—á–∫–∞'
      })
      map.addChild(customMarkerRetry)

      mapInstanceRef.current = map
      mapStore.setMapLoaded(true)
      mapStore.setMapLoading(false)
      mapStore.setError(null)

    } catch (error) {
      mapStore.setError(`–û—à–∏–±–∫–∞ –ø–æ–≤—Ç–æ—Ä–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`)
      mapStore.setMapLoading(false)
    }
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É API –∏–ª–∏ –∫–∞—Ä—Ç—ã
  if (apiError || mapStore.error) {
    const errorMessage = apiError || mapStore.error
    return (
      <div className="h-screen w-full flex items-center justify-center bg-gray-100">
        <div className="text-center max-w-md mx-auto p-6">
          <div className="text-red-500 text-2xl mb-4">üó∫Ô∏è –ü—Ä–æ–±–ª–µ–º–∞ —Å –∫–∞—Ä—Ç–æ–π</div>
          <div className="text-gray-700 mb-4 text-lg">{errorMessage}</div>
          
          <div className="text-gray-600 text-sm mb-6">
            <strong>–î–ª—è —Ä–∞–±–æ—Ç—ã –∫–∞—Ä—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:</strong>
            <ul className="list-disc text-left mt-2 ml-4">
              <li>–°—Ç–∞–±–∏–ª—å–Ω–æ–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ</li>
              <li>–î–æ—Å—Ç—É–ø –∫ Yandex —Å–µ—Ä–≤–∏—Å–∞–º</li>
              <li>JavaScript –≤–∫–ª—é—á–µ–Ω –≤ –±—Ä–∞—É–∑–µ—Ä–µ</li>
              <li>API –∫–ª—é—á Yandex Maps (–¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞)</li>
            </ul>
          </div>
          
          <div className="space-x-3">
            <button 
              onClick={handleRetry}
              className="px-6 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors font-medium"
            >
              üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
            </button>
            <a 
              href="https://yandex.ru/maps-api/docs/js-api/index.html"
              target="_blank"
              rel="noopener noreferrer"
              className="inline-block px-6 py-2 bg-gray-500 text-white rounded-lg hover:bg-gray-600 transition-colors font-medium"
            >
              üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è
            </a>
          </div>
        </div>
      </div>
    )
  }

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –∑–∞–≥—Ä—É–∑–∫—É API, –∫–∞—Ä—Ç—É –Ω–µ –±–ª–æ–∫–∏—Ä—É–µ–º
  if (isApiLoading) {
    return (
      <div className="h-screen w-full flex items-center justify-center bg-gradient-to-br from-blue-50 to-gray-100">
        <div className="text-center">
          <div className="animate-spin rounded-full h-16 w-16 border-4 border-blue-500 border-t-transparent mx-auto mb-6"></div>
          <div className="text-gray-700 text-xl font-medium mb-2">–ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç—ã –ú–æ—Å–∫–≤—ã...</div>
          <div className="text-gray-500 text-sm">
            –ó–∞–≥—Ä—É–∑–∫–∞ Yandex Maps API 3.0...
          </div>
        </div>
      </div>
    )
  }

  return (
    <div className="relative h-screen w-full">
      <div 
        ref={(el) => {
          if (el) {
            Object.assign(mapRef, { current: el })
          }
        }}
        className="h-full w-full"
        style={{ 
          position: 'relative',
          minHeight: '100vh',
          width: '100%',
          display: 'block'
        }}
        id="yandex-map-container"
      />


      {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ä—Ç—ã –ø–æ–≤–µ—Ä—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */}
      {mapStore.isMapLoading && (
        <div className="absolute inset-0 bg-white bg-opacity-80 flex items-center justify-center z-50">
          <div className="text-center">
            <div className="animate-spin rounded-full h-12 w-12 border-4 border-blue-500 border-t-transparent mx-auto mb-4"></div>
            <div className="text-gray-700 text-lg font-medium">
              {isApiReady ? '–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç—ã...' : '–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...'}
            </div>
          </div>
        </div>
      )}


      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ö—Ä–µ–º–ª–µ */}
      <KremlinModal 
        isVisible={isModalVisible}
        onClose={closeModal}
        position={markerPosition}
      />

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –≤–∞—à–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ */}
      <MarkerModal 
        isVisible={isCustomModalVisible}
        onClose={closeCustomModal}
        position={customMarkerPosition}
        className="max-w-md"
      >
        <div className="p-6">
          <div className="flex items-center justify-between mb-4 border-b border-gray-100 pb-3">
            <h3 className="text-xl font-bold text-gray-800 flex items-center">
              üè¢ –ú–æ–π –æ–±—ä–µ–∫—Ç
            </h3>
          </div>
          
          <div className="space-y-4">
            <div className="text-gray-700">
              <p className="text-sm leading-relaxed mb-3">
                –≠—Ç–æ –≤–∞—à –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –æ–±—ä–µ–∫—Ç –Ω–∞ –∫–∞—Ä—Ç–µ! –í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞—Ç—å –º–∞—Ä–∫–µ—Ä 
                –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å –µ–≥–æ —Å–≤–æ–π—Å—Ç–≤–∞.
              </p>
              
              <div className="bg-blue-50 border border-blue-200 rounded-lg p-3 mb-3">
                <div className="text-xs text-blue-800 space-y-1">
                  <div><strong>üìç –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</strong></div>
                  <div>–î–æ–ª–≥–æ—Ç–∞: {customObjectCoords[0].toFixed(6)}</div>
                  <div>–®–∏—Ä–æ—Ç–∞: {customObjectCoords[1].toFixed(6)}</div>
                </div>
              </div>
              
              <div className="text-xs text-gray-500 space-y-1">
                <div>üéØ <strong>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</strong></div>
                <div>‚Ä¢ –ü–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–µ–º—ã–π –º–∞—Ä–∫–µ—Ä</div>
                <div>‚Ä¢ –ö–∞—Å—Ç–æ–º–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ</div>
                <div>‚Ä¢ –£–º–Ω–æ–µ –ø–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</div>
              </div>
            </div>
            
            <div className="flex gap-2 pt-3 border-t border-gray-100">
              <button 
                onClick={() => {
                  console.log('–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ–±—ä–µ–∫—Ç–∞:', customObjectCoords)
                  alert('–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—ã–≤–µ–¥–µ–Ω—ã –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞!')
                }}
                className="flex-1 px-3 py-2 bg-blue-500 hover:bg-blue-600 text-white text-sm rounded-lg transition-colors"
              >
                üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
              </button>
              <button 
                onClick={closeCustomModal}
                className="px-3 py-2 bg-gray-500 hover:bg-gray-600 text-white text-sm rounded-lg transition-colors"
              >
                –ó–∞–∫—Ä—ã—Ç—å
              </button>
            </div>
          </div>
        </div>
      </MarkerModal>
    </div>
  )
})

export default YandexMap
